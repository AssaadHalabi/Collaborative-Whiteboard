service: rds-service

provider:
  name: aws
  runtime: nodejs18.x
  region: eu-north-1
  stage: ${opt:stage, 'dev'}

resources:
  Resources:
    MyRDSInstanceSecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: Enable PostgreSQL access
        VpcId: vpc-097e0af135fa2c836
        SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: 5432
            ToPort: 5432
            CidrIp: 0.0.0.0/0

    MyRDSInstance:
      Type: AWS::RDS::DBInstance
      Properties:
        DBInstanceClass: db.t3.micro
        Engine: postgres
        AllocatedStorage: 20
        DBName: ${env:AWS_DB_NAME}
        MasterUsername: ${env:AWS_DB_MASTER_USERNAME}
        MasterUserPassword: ${env:AWS_DB_MASTER_PASSWORD}
        VPCSecurityGroups:
          - { "Fn::GetAtt": [ "MyRDSInstanceSecurityGroup", "GroupId" ] }
        MultiAZ: false
        PubliclyAccessible: true
        BackupRetentionPeriod: 7
        StorageType: gp2
        StorageEncrypted: true

  Outputs:
    RDSInstanceEndpoint:
      Value: !GetAtt MyRDSInstance.Endpoint.Address
      Export:
        Name: ${self:service}-${self:provider.stage}-rds-endpoint

    RDSInstancePort:
      Value: !GetAtt MyRDSInstance.Endpoint.Port
      Export:
        Name: ${self:service}-${self:provider.stage}-rds-port
